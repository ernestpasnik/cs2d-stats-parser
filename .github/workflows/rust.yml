name: Deploy

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

jobs:
  build-and-upload:
    name: Build and upload
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - build: win-msvc
            os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --verbose --release --target ${{ matrix.target }}

      - name: Create release directory
        run: mkdir -p release

      - name: Move the specific binaries to release directory
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            mv target/${{ matrix.target }}/release/cs2d-stats-parser release/
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            mv target/${{ matrix.target }}/release/cs2d-stats-parser.exe release/
          fi
        shell: bash

      - name: List the release files
        run: ls -l release

      - name: Upload the binaries to the release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          file: ./release/*
          file_glob: true
